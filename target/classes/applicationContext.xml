<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 我们不会将这个Bean进行实例化，class属性中定义了PropertyPlaceholderConfigurer类，可以告诉Spring我们实际上要注册一个properties文件 -->
	<bean id="propertyFileConfigForDB"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>redis.properties</value>
			<!-- 以上为properties文件路径 -->
		</property>
	</bean>

	<!-- 连接池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- 连接池创建工厂 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<!-- 类似与JDBC模块，由DAOImpl进行使用 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory" />

	<!-- DAO -->
	<bean id="userDao" class="com.newidor.learn.redis.dao.UserDaoImpl">
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>
	<bean id="puzzleUserDao" class="com.newidor.learn.redis.dao.PuzzleUserDaoImpl">
		<property name="redisTemplate" ref="redisTemplate"></property>
	</bean>

	<!-- DAO -->
	<bean id="listOps" class="com.newidor.learn.redis.dao.ListOps">
		<property name="stringRedisTemplate" ref="stringRedisTemplate"></property>
	</bean>
	

</beans> 

